version: '3.9'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
      - "8080:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__PostgreSQL: "Host=postgres;Port=5432;Database=appdb;Username=postgres;Password=postgres"
      RabbitMQ__HostName: "rabbitmq"
      RabbitMQ__UserName: "admin"
      RabbitMQ__Password: "admin"
      S3__AccessKey: "your-access-key"
      S3__SecretKey: "your-secret-key"
      S3__BucketName: "your-bucket-name"
      S3__Region: "your-region"
      MongoSettings__ConnectionString: "mongodb://mongo:27017/"
    depends_on:
      - rabbitmq
    restart: on-failure
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    command: [ "--bind_ip_all", "--noauth" ]
    volumes:
      - mongo_data:/data/db

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "your-access-key"
      MINIO_ROOT_PASSWORD: "your-secret-key"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

volumes:
  postgres_data:
  mongo_data:
  minio_data:
