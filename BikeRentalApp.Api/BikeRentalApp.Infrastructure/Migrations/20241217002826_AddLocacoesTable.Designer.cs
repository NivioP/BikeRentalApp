// <auto-generated />
using System;
using BikeRentalApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BikeRentalApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241217002826_AddLocacoesTable")]
    partial class AddLocacoesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BikeRentalApp.Domain.Entities.Entregador", b =>
                {
                    b.Property<string>("Identificador")
                        .HasColumnType("text");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Imagem_CNH")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Numero_CNH")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo_CNH")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Identificador");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.HasIndex("Numero_CNH")
                        .IsUnique();

                    b.ToTable("Entregadores");
                });

            modelBuilder.Entity("BikeRentalApp.Domain.Entities.Locacao", b =>
                {
                    b.Property<string>("Identificador")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Data_Devolucao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Data_Inicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Data_Previsao_Termino")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Data_Termino")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Entregador_Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Moto_Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor_Diaria")
                        .HasColumnType("numeric");

                    b.HasKey("Identificador");

                    b.HasIndex("Entregador_Id");

                    b.HasIndex("Moto_Id");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("BikeRentalApp.Domain.Entities.Moto", b =>
                {
                    b.Property<string>("Identificador")
                        .HasColumnType("text");

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Identificador");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("BikeRentalApp.Domain.Entities.Locacao", b =>
                {
                    b.HasOne("BikeRentalApp.Domain.Entities.Entregador", "Entregador")
                        .WithMany("Locacoes")
                        .HasForeignKey("Entregador_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BikeRentalApp.Domain.Entities.Moto", "Moto")
                        .WithMany("Locacoes")
                        .HasForeignKey("Moto_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entregador");

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("BikeRentalApp.Domain.Entities.Entregador", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("BikeRentalApp.Domain.Entities.Moto", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
